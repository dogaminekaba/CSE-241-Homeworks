/*  Doğa Mine Kaba 121044004
 *  HW09_121044004
 *
 *  This GUI program adds, removes and modifies persons.
 *  It adds and removes families.
 *  It can't modify families.
 */

package javaapplication1;

import java.awt.Component;
import static java.lang.System.exit;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Doğa
 */
public class HW09_121044004 extends javax.swing.JFrame {
    private Component frame;

    /**
     * Creates new form HW09
     */
    public HW09_121044004() {
        initComponents();
        model1 = new DefaultListModel();
        model2 = new DefaultListModel();
        pArr = new Person[1000];
        fArr = new Family[1000];
        Person p1 = new Person("April", "Ryan", 1970, "female");
		Person p2 = new Person("Kian", "Alvane", 1965, "male");
		Person p3 = new Person("Zoe", "Castillo", 1995, "female");
		Person p4 = new Person("Jack", "Harkness", 1970, "male");
        
        pArr[0] = p1;
        ++pArrCount;
        pArr[1] = p2;
        ++pArrCount;
        pArr[2] = p3;
        ++pArrCount;
        pArr[3] = p4;
        ++pArrCount;
        
        for (int i = 0; i < (pArrCount) ; i++) {
            model2.addElement(i + ":   " 
                              + (pArr[i]).toString());
            }
            jList2.setModel(model2);
       
        Family f1 = new Family(p1, p2);
	f1.add(p3);
	
	Family f2 = new Family(p3, p4);
        
        fArrCount = f2.getNumOfFamilies();
        
        fArr[0] = f1;
        fArr[1] = f2;
        
        for (int i = 0; i < (fArrCount) ; i++) {
            model1.addElement(i + ":   " 
                              + ((fArr[i]).father).getLastName() + " Family");
            }
            jList1.setModel(model1);
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jList1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(jList1);

        jList2.setModel(new DefaultListModel());
        jScrollPane2.setViewportView(jList2);

        jButton1.setText("Add Family");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Add Person");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Remove Family");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Remove Person");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Modify Family");

        jButton6.setText("Modify Person");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("jButton7");

        jButton8.setText("Exit");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel1.setText("Families");

        jLabel2.setText("Persons");

        jLabel3.setText("ID");

        jLabel4.setText("ID");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(80, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3))
                    .addComponent(jButton5)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(65, 65, 65)
                        .addComponent(jLabel1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(126, 126, 126)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(64, 64, 64)
                        .addComponent(jLabel2))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButton7)
                            .addGap(18, 18, 18)
                            .addComponent(jButton8))
                        .addComponent(jButton6)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButton2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton4))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGap(81, 81, 81))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton3))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2)
                        .addComponent(jButton4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(jButton8))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        Person mother1;
        Person father1;
                
       String personStr = JOptionPane.showInputDialog(frame,
            "Please enter Mother's name, last name,"
                + " birth year and gender like: \n" 
                + "Doğa Mine 1995 female",
            "Adding Family",
            JOptionPane.PLAIN_MESSAGE
            );
        
        if((personStr != "") && (personStr != null))
        {
            int counter = 0;
            String newName = "";
            String newLastName = "";
            String strYear = "";
            int newBirthYear = 0;
            String newGender = "";
            
            int strLen = personStr.length();
            
            for (int i = 0; personStr.charAt(i) != ' ' ; i++) {
                newName += personStr.charAt(i);
                ++counter;
            }    
            ++counter;
            for (int i = counter; personStr.charAt(i) != ' '; i++) {
                newLastName += personStr.charAt(i);
                ++counter;
            }
            ++counter;
            for (int i = counter; personStr.charAt(i) != ' '; i++) {
                strYear += personStr.charAt(i);
                ++counter;
            }
            newBirthYear = Integer.parseInt(strYear);
             ++counter;
            for (int i = counter; counter < strLen ; i++) {
                newGender += personStr.charAt(i);
                ++counter;
            }
            Person p1 = new Person(newName, newLastName, 
                                    newBirthYear, newGender);
            model2.addElement(pArrCount + ":   " + p1.toString());
            jList2.setModel(model2);
            pArr[pArrCount] = p1;
            pArrCount = p1.getNumOfPersons();
            
            String personStr2 = JOptionPane.showInputDialog(frame,
            "Please enter Father's name, last name,"
                + " birth year and gender like: \n" 
                + "Kian Alvane 1980 male",
            "Adding Family",
            JOptionPane.PLAIN_MESSAGE
            );
        
            if((personStr2 != "")  && (personStr != null))
            {
                int counter2 = 0;
                String newName2 = "";
                String newLastName2 = "";
                String strYear2 = "";
                int newBirthYear2 = 0;
                String newGender2 = "";

                int strLen2 = personStr2.length();

                for (int i = 0; personStr2.charAt(i) != ' ' ; i++) {
                    newName2 += personStr2.charAt(i);
                    ++counter2;
                }    
                ++counter2;
                for (int i = counter2; personStr2.charAt(i) != ' '; i++) {
                    newLastName2 += personStr2.charAt(i);
                    ++counter2;
                }
                ++counter2;
                for (int i = counter2; personStr2.charAt(i) != ' '; i++) {
                    strYear2 += personStr2.charAt(i);
                    ++counter2;
                }
                newBirthYear2 = Integer.parseInt(strYear2);
                 ++counter2;
                for (int i = counter2; counter2 < strLen2 ; i++) {
                    newGender2 += personStr2.charAt(i);
                    ++counter2;
                }
                Person p2 = new Person(newName2, newLastName2, 
                                        newBirthYear2, newGender2);
                
                model2.addElement(pArrCount + ":   " + p2.toString());
                jList2.setModel(model2);
                pArr[pArrCount] = p2;
                pArrCount = p2.getNumOfPersons();
                
                Family fNew = new Family(p1,p2);
                model1.addElement(fArrCount + ":   " + fNew.father.getLastName()
                                  + " Family");
                jList1.setModel(model1);
                fArr[fArrCount] = fNew;
                fArrCount = fNew.getNumOfFamilies();
            }
        }
        
             
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        String personStr = JOptionPane.showInputDialog(frame,
            "Please enter your person's name, last name,"
                + " birth year and gender like: \n" 
                + "Doğa Mine 1995 female",
            "Adding Person",
            JOptionPane.PLAIN_MESSAGE
            );
        
        if((personStr != "") && (personStr != null))
        {
            int counter = 0;
            String newName = "";
            String newLastName = "";
            String strYear = "";
            int newBirthYear = 0;
            String newGender = "";
            
            int strLen = personStr.length();
            
            for (int i = 0; personStr.charAt(i) != ' ' ; i++) {
                newName += personStr.charAt(i);
                ++counter;
            }    
            ++counter;
            for (int i = counter; personStr.charAt(i) != ' '; i++) {
                newLastName += personStr.charAt(i);
                ++counter;
            }
            ++counter;
            for (int i = counter; personStr.charAt(i) != ' '; i++) {
                strYear += personStr.charAt(i);
                ++counter;
            }
            newBirthYear = Integer.parseInt(strYear);
             ++counter;
            for (int i = counter; counter < strLen ; i++) {
                newGender += personStr.charAt(i);
                ++counter;
            }
            Person p1 = new Person(newName, newLastName, 
                                    newBirthYear, newGender);
            
            model2.addElement(pArrCount + ":   " + p1.toString());
            jList2.setModel(model2);
            pArr[pArrCount] = p1;
            pArrCount = p1.getNumOfPersons();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        exit(0);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
           
            String personIDStr = JOptionPane.showInputDialog(frame,
            "Please enter the ID of person you want to remove.",
            "Removing Person",
            JOptionPane.PLAIN_MESSAGE
            );
            int personID = Integer.parseInt(personIDStr);
            if (personIDStr != "" && (personID <= pArrCount) && (personID >= 0)
                && (personIDStr != null))
            {
                Person pRemoved = pArr[personID];
                model2.removeAllElements();
                
                for (int i = 0; i < personID; i++) {
                     model2.addElement(i + ":   " 
                                        + pArr[i].toString());
                }
                
                for (int i = personID; i < (pArrCount-1) ; i++) {
                     pArr[i] = pArr[(i + 1)];
                     model2.addElement(i + ":   " 
                                        + (pArr[i]).toString());
                }
                jList2.setModel(model2);
                pArrCount = pRemoved.decNumOfPersons();
             }
            
            
            
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        String personIDStr = JOptionPane.showInputDialog(frame,
            "Please enter the ID of person you want to modify.",
            "Modify Person",
            JOptionPane.PLAIN_MESSAGE
            );
            
            int personID = Integer.parseInt(personIDStr);
            
            if (personIDStr != "" && (personID <= pArrCount) && (personID >= 0)
                && (personIDStr != null))
            {

                Object[] possibilities = {"Name", "Last Name", 
                                        "Birth Year", "Gender"};
                String s = (String)JOptionPane.showInputDialog(
                            frame,
                            "Please select what you want to modify:\n",
                            "Modify Person",
                            JOptionPane.PLAIN_MESSAGE,
                            null,
                            possibilities,
                            "");
                if (s == "Name") {
                    String newName = JOptionPane.showInputDialog(frame,
                    "Please enter new Name.",
                    "Modify Person",
                    JOptionPane.PLAIN_MESSAGE
                    );
                    pArr[personID].setName(newName);
                }
                else if (s == "Last Name") {
                    String newLastName = JOptionPane.showInputDialog(frame,
                    "Please enter new Last Name.",
                    "Modify Person",
                    JOptionPane.PLAIN_MESSAGE
                    );
                    pArr[personID].setLastName(newLastName);
                }
                else if (s == "Birth Year") {
                    int newBirthYear;
                    String newBirthYearStr = JOptionPane.showInputDialog(frame,
                    "Please enter new Birth Year.",
                    "Modify Person",
                    JOptionPane.PLAIN_MESSAGE
                    );
                    newBirthYear = Integer.parseInt(newBirthYearStr);
                    pArr[personID].setBirthYear(newBirthYear);
                }
                else if (s == "Gender") {
                    String newGender = JOptionPane.showInputDialog(frame,
                    "Please enter new Gender.",
                    "Modify Person",
                    JOptionPane.PLAIN_MESSAGE
                    );
                    pArr[personID].setGender(newGender);
                }
                model2.removeAllElements();
                for (int i = 0; i < (pArrCount) ; i++) {
                     model2.addElement(i + ":   " 
                                        + (pArr[i]).toString());
                }
                jList2.setModel(model2);
            }   
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         String familyIDStr = JOptionPane.showInputDialog(frame,
            "Please enter the ID of family you want to remove.",
            "Removing Family",
            JOptionPane.PLAIN_MESSAGE
            );
            int familyID = Integer.parseInt(familyIDStr);
            if (familyIDStr != "" && (familyID <= fArrCount) && (familyID >= 0)
                && (familyIDStr != null)) 
            {
                Family fRemoved = fArr[familyID];
                model1.removeAllElements();
                
                for (int i = 0; i < familyID; i++) {
                     model1.addElement(i + ":   " 
                            + fArr[i].father.getLastName() + " Family");
                }
                
                for (int i = familyID; i < (fArrCount-1) ; i++) {
                     fArr[i] = fArr[(i + 1)];
                     model1.addElement(i + ":   " 
                            + fArr[i].father.getLastName() + " Family");
                }
                jList1.setModel(model1);
                fArrCount = fRemoved.decNumOfFamilies();
             }
            
            
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HW09_121044004.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HW09_121044004.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HW09_121044004.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HW09_121044004.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HW09_121044004().setVisible(true);
            }
        });
    }
    private DefaultListModel model1;
    private DefaultListModel model2;
    private Person[] pArr;
    private Family[] fArr;
    private int fArrCount;
    private int pArrCount;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
